{
  "_from": "@monogrid/gainmap-js@^3.0.6",
  "_id": "@monogrid/gainmap-js@3.1.0",
  "_inBundle": false,
  "_integrity": "sha512-Obb0/gEd/HReTlg8ttaYk+0m62gQJmCblMOjHSMHRrBP2zdfKMHLCRbh/6ex9fSUJMKdjjIEiohwkbGD3wj2Nw==",
  "_location": "/@monogrid/gainmap-js",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@monogrid/gainmap-js@^3.0.6",
    "name": "@monogrid/gainmap-js",
    "escapedName": "@monogrid%2fgainmap-js",
    "scope": "@monogrid",
    "rawSpec": "^3.0.6",
    "saveSpec": null,
    "fetchSpec": "^3.0.6"
  },
  "_requiredBy": [
    "/@react-three/drei"
  ],
  "_resolved": "https://registry.npmjs.org/@monogrid/gainmap-js/-/gainmap-js-3.1.0.tgz",
  "_shasum": "4ac1f88abd6affdf0b51d79318109183b499c502",
  "_spec": "@monogrid/gainmap-js@^3.0.6",
  "_where": "/home/parth/Desktop/portfolio/node_modules/@react-three/drei",
  "author": {
    "name": "MONOGRID",
    "email": "rnd@monogrid.com"
  },
  "browserslist": [
    "> 1%, not dead, not ie 11, not op_mini all"
  ],
  "bugs": {
    "url": "https://github.com/MONOGRID/gainmap-js/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "promise-worker-transferable": "^1.0.4"
  },
  "deprecated": false,
  "description": "A Javascript (TypeScript) Port of Adobe Gainmap Technology for storing HDR Images using an SDR Image + a gain map",
  "devDependencies": {
    "@playwright/test": "^1.46.0",
    "@rollup/plugin-commonjs": "^26.0.1",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^15.2.3",
    "@rollup/plugin-terser": "^0.4.4",
    "@rollup/plugin-typescript": "^11.1.6",
    "@semantic-release/changelog": "^6.0.3",
    "@semantic-release/commit-analyzer": "^13.0.0",
    "@semantic-release/git": "github:semantic-release/git",
    "@semantic-release/github": "^10.1.3",
    "@semantic-release/npm": "^12.0.1",
    "@semantic-release/release-notes-generator": "^14.0.1",
    "@types/node": "^20.14.9",
    "@types/three": "^0.170.0",
    "@typescript-eslint/eslint-plugin": "^7.15.0",
    "@typescript-eslint/parser": "^7.15.0",
    "concurrently": "^8.2.2",
    "conventional-changelog-conventionalcommits": "^8.0.0",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.56.0",
    "eslint-config-mdcs": "^5.0.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-compat": "^4.2.0",
    "eslint-plugin-html": "^8.0.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-n": "^16.6.2",
    "eslint-plugin-promise": "^6.4.0",
    "eslint-plugin-simple-import-sort": "^12.0.0",
    "eslint-plugin-unused-imports": "^3.2.0",
    "nyc": "^17.0.0",
    "rollup": "^4.20.0",
    "rollup-plugin-copy": "^3.5.0",
    "rollup-plugin-delete": "^2.0.0",
    "rollup-plugin-istanbul": "^5.0.0",
    "rollup-plugin-license": "^3.5.2",
    "semantic-release": "^24.0.0",
    "servez": "^2.2.3",
    "sharp": "^0.33.4",
    "three": "^0.170.0",
    "typedoc": "^0.26.5",
    "typedoc-github-wiki-theme": "^2.0.0",
    "typedoc-plugin-markdown": "^4.2.3",
    "typescript": "^5.5.4"
  },
  "exports": {
    ".": {
      "types": "./dist/decode.d.ts",
      "import": "./dist/decode.js",
      "default": "./dist/decode.umd.cjs"
    },
    "./encode": {
      "types": "./dist/encode.d.ts",
      "import": "./dist/encode.js",
      "default": "./dist/encode.umd.cjs"
    },
    "./libultrahdr": {
      "types": "./dist/libultrahdr.d.ts",
      "import": "./dist/libultrahdr.js",
      "default": "./dist/libultrahdr.umd.cjs"
    },
    "./worker": {
      "types": "./dist/worker.d.ts",
      "import": "./dist/worker.js",
      "default": "./dist/worker.umd.cjs"
    },
    "./worker-interface": {
      "types": "./dist/worker-interface.d.ts",
      "import": "./dist/worker-interface.js",
      "default": "./dist/worker-interface.umd.cjs"
    }
  },
  "homepage": "https://github.com/MONOGRID/gainmap-js#readme",
  "keywords": [
    "hdr",
    "gain map",
    "gainmap",
    "three",
    "threejs"
  ],
  "license": "MIT",
  "main": "dist/decode.umd.cjs",
  "module": "dist/decode.js",
  "name": "@monogrid/gainmap-js",
  "peerDependencies": {
    "three": ">= 0.159.0"
  },
  "publishConfig": {
    "access": "public",
    "registry": "https://registry.npmjs.org/"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/MONOGRID/gainmap-js.git"
  },
  "scripts": {
    "build": "rollup -c",
    "check": "concurrently -c auto npm:check:*",
    "check:eslint-examples": "eslint \"examples/**/*.{ts,html}\"",
    "check:eslint-src": "eslint \"src/**/*.ts\"",
    "check:eslint-tests": "eslint \"tests/**/*.ts\"",
    "check:typecheck-examples": "tsc -p examples",
    "check:typecheck-src": "tsc -p src",
    "check:typecheck-tests": "tsc -p tests",
    "ci:check": "concurrently npm:ci:check:*",
    "ci:check:eslint-examples": "eslint --format json --output-file reports/eslint-examples.json \"examples/**/*.{ts,html}\"",
    "ci:check:eslint-src": "eslint --format json --output-file reports/eslint-src.json \"src/**/*.ts\"",
    "ci:check:eslint-tests": "eslint --format json --output-file reports/eslint-tests.json \"tests/**/*.ts\"",
    "ci:check:typecheck-examples": "tsc --pretty false -p examples > reports/typecheck-examples.log",
    "ci:check:typecheck-src": "tsc --pretty false -p src > reports/typecheck.log",
    "ci:check:typecheck-tests": "tsc --pretty false -p tests > reports/typecheck-tests.log",
    "dev": "concurrently -n rollup,servez -c magenta,green \"rollup -c -w\" \"servez\"",
    "prepack": "npm run build",
    "start": "concurrently -n rollup,servez -c magenta,green \"rollup -c -w\" \"servez\"",
    "test": "nyc --reporter=text --reporter=lcov playwright test",
    "test:codegen": "playwright codegen http://localhost:8080",
    "test:docker": "docker run --rm --network host -v $(pwd):/work -w /work -it -u $(id -u ${USER}):$(id -g ${USER}) mcr.microsoft.com/playwright:v1.46.0-jammy /bin/bash",
    "test:startserver": "rollup -c && servez"
  },
  "sideEffects": false,
  "type": "module",
  "types": "dist/decode.d.ts",
  "typesVersions": {
    "*": {
      ".": [
        "./dist/decode.d.ts"
      ],
      "encode": [
        "./dist/encode.d.ts"
      ],
      "libultrahdr": [
        "./dist/libultrahdr.d.ts"
      ],
      "worker": [
        "./dist/worker.d.ts"
      ],
      "worker-interface": [
        "./dist/worker-interface.d.ts"
      ]
    }
  },
  "version": "3.1.0"
}
